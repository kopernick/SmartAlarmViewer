<RibbonTab x:Class="Alarm4Rest_Viewer.CustControl.mainRibbonTapView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Alarm4Rest_Viewer.CustControl"
             
             xmlns:RestorationAlarmLists="clr-namespace:Alarm4Rest_Viewer.RestAlarmLists" 
             xmlns:CustomAlarmLists="clr-namespace:Alarm4Rest_Viewer.CustomAlarmLists" 
             xmlns:Services="clr-namespace:Alarm4Rest_Viewer.Services"
             xmlns:CustControl="clr-namespace:Alarm4Rest_Viewer.CustControl" 
             xmlns:dd="clr-namespace:Solutions.Wpf.DragDrop;assembly=Solutions.Wpf.DragDrop"
             xmlns:sys="clr-namespace:System;assembly=mscorlib">

        <RibbonTab.Resources>
            <Services:MultiValueConverter x:Key="MultiValueConverter" />

            <BitmapImage x:Key="MainImage" UriSource="/Alarm4Rest_Viewer;component/images/main.png" />
            <BitmapImage x:Key="FilterImage" UriSource="/Alarm4Rest_Viewer;component/images/filter.png" />
            <BitmapImage x:Key="SearchImage" UriSource="/Alarm4Rest_Viewer;component/images/search.png" />
            <BitmapImage x:Key="firstPageImage" UriSource = "/Alarm4Rest_Viewer;component/images/firstPage.png" />
            <BitmapImage x:Key="prePageImage" UriSource = "/Alarm4Rest_Viewer;component/images/prePage.png" />
            <BitmapImage x:Key="nextPageImage" UriSource = "/Alarm4Rest_Viewer;component/images/nextPage.png" />
            <BitmapImage x:Key="lastPageImage" UriSource = "/Alarm4Rest_Viewer;component/images/lastPage.png" />


    </RibbonTab.Resources>
    
    <RibbonTab.DataContext>
        <local:mainRibbonTapViewModel/>
        <!--<ViewModel:ViewModelEventAlarm/> -->
    </RibbonTab.DataContext>

    <!-- Standard Select group-->
    <RibbonGroup x:Name="GroupSel" Header="Select Category">
        <GroupBox Header="Category">
            <StackPanel>

                <Grid>
                    <Grid.ColumnDefinitions >
                        <ColumnDefinition Width="200"/>
                        <ColumnDefinition Width="200"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <RibbonCheckBox x:Name="CheckBox1" Grid.Row="0" Grid.Column="0" MinWidth="65" Margin="1" 
                                    HorizontalAlignment="Left"
                                    Label="{Binding CatDesc1.Name}"
                                    IsChecked="{Binding CatDesc1.IsChecked,Mode=TwoWay}"
                                    Command="{Binding CheckCommand}"
                                    CommandParameter="{Binding CatDesc1.Name}">

                    </RibbonCheckBox>

                    <RibbonCheckBox x:Name="CheckBox2" Grid.Row="0" Grid.Column="1" MinWidth="65" Margin="1" 
                                    HorizontalAlignment="Left"
                                    Label="{Binding CatDesc2.Name}"
                                    IsChecked="{Binding CatDesc2.IsChecked,Mode=TwoWay}"
                                    Command="{Binding CheckCommand}"
                                    CommandParameter="{Binding CatDesc2.Name}">
                    </RibbonCheckBox>

                    <RibbonCheckBox x:Name="CheckBox3" Grid.Row="0" Grid.Column="2" MinWidth="65" Margin="1" 
                                    HorizontalAlignment="Left"
                                    Label="{Binding CatDesc3.Name}"
                                    IsChecked="{Binding CatDesc3.IsChecked,Mode=TwoWay}"
                                    Command="{Binding CheckCommand}"
                                    CommandParameter="{Binding CatDesc3.Name}">
                    </RibbonCheckBox>
                    
                    <RibbonCheckBox x:Name="CheckBox4" Grid.Row="0" Grid.Column="3" MinWidth="65" Margin="1" 
                                    HorizontalAlignment="Left"
                                    Label="{Binding CatDesc4.Name}"
                                    IsChecked="{Binding CatDesc4.IsChecked,Mode=TwoWay}"
                                    Command="{Binding CheckCommand}"
                                    CommandParameter="{Binding CatDesc4.Name}">
                    </RibbonCheckBox>

                    <RibbonCheckBox x:Name="CheckBox5" Grid.Row="1" Grid.Column="0" MinWidth="65" Margin="1" 
                                    HorizontalAlignment="Left"
                                    Label="{Binding CatDesc5.Name}"
                                    IsChecked="{Binding CatDesc5.IsChecked,Mode=TwoWay}"
                                    Command="{Binding CheckCommand}"
                                    CommandParameter="{Binding CatDesc5.Name}">
                    </RibbonCheckBox>

                    <RibbonCheckBox x:Name="CheckBox6" Grid.Row="1" Grid.Column="1" MinWidth="65" Margin="1" 
                                    HorizontalAlignment="Left"
                                    Label="{Binding CatDesc6.Name}"
                                    IsChecked="{Binding CatDesc6.IsChecked,Mode=TwoWay}"
                                    Command="{Binding CheckCommand}"
                                    CommandParameter="{Binding CatDesc6.Name}">
                    </RibbonCheckBox>

                    <RibbonCheckBox x:Name="CheckBox7" Grid.Row="1" Grid.Column="2" MinWidth="65" Margin="1" 
                                    HorizontalAlignment="Left"
                                    Label="{Binding CatDesc7.Name}"
                                    IsChecked="{Binding CatDesc7.IsChecked,Mode=TwoWay}"
                                    Command="{Binding CheckCommand}"
                                    CommandParameter="{Binding CatDesc7.Name}">
                    </RibbonCheckBox>

                    <RibbonCheckBox x:Name="CheckBox8" Grid.Row="1" Grid.Column="3" MinWidth="65" Margin="1" 
                                    HorizontalAlignment="Left"
                                    Label="{Binding CatDesc8.Name}"
                                    IsChecked="{Binding CatDesc8.IsChecked,Mode=TwoWay}"
                                    Command="{Binding CheckCommand}"
                                    CommandParameter="{Binding CatDesc8.Name}">
                    </RibbonCheckBox>

                </Grid>

            </StackPanel>

        </GroupBox>

    </RibbonGroup>

    <!-- Standard Query group-->

    <RibbonGroup x:Name="SortQuery" Header="Sort Order">
        <Grid>
            <Grid.ColumnDefinitions >
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <ListBox Grid.Column="0" Grid.RowSpan="3" ItemsSource="{Binding AlarmListFields}" DisplayMemberPath ="FieldName"
                 IsSynchronizedWithCurrentItem="True"
                 dd:DragDrop.IsDropTarget="True" dd:DragDrop.DropHandler="{Binding}"/>
            <ListBox Grid.Column="1" Grid.RowSpan="3" ItemsSource="{Binding Schools.CurrentItem.Pupils}" DisplayMemberPath="FullName"
                 dd:DragDrop.IsDragSource="True" dd:DragDrop.IsDropTarget="True"/>
        </Grid>
    </RibbonGroup>
    <!--
        <RibbonGroup x:Name="SortQuery" Header="Sort Order">
            <Grid>
                <Grid.ColumnDefinitions >
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <Button  Content="Query 1" Grid.Row="0" Grid.Column="0" MinWidth="72" Width="Auto" Margin="5,2,5,2"
                                  Command="{Binding RunStdSortQuery}"
                                    CommandParameter="1">
                </Button>
                <Button  Content="Query 2" Grid.Row="0" Grid.Column="1" MinWidth="72" Width="Auto" Margin="5,2,5,2"
                                  Command="{Binding RunStdSortQuery}"
                                    CommandParameter="2">
                </Button>
                <Button  Content="Query 3" Grid.Row="0" Grid.Column="2" MinWidth="72" Width="Auto" Margin="5,2,5,2"
                                  Command="{Binding RunStdSortQuery}"
                                    CommandParameter="3">
                </Button>
            </Grid>

        </RibbonGroup>
    

    <RibbonGroup x:Name="SortOrder" Header="Sort Order Setting">
        <Grid>
            <Grid.ColumnDefinitions >
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>


            <TextBlock Text="First Order" Grid.Row="0" Grid.Column="0"/>

            <ComboBox Grid.Row="1" Grid.Column="0" MinWidth="80" Width="Auto"
                                IsEditable="True"
                                IsReadOnly="True"
                                ItemsSource="{Binding fieldItems1}"
                                DisplayMemberPath="FieldName"
                                SelectedValuePath="FieldName"
                                
                                Margin="2">
        </ComboBox>

            <TextBlock Text="Second Order" Grid.Row="0" Grid.Column="1"/>

            <ComboBox Grid.Row="1" Grid.Column="1" MinWidth="80" Width="Auto"
                                IsEditable="True"
                                IsReadOnly="True"
                                ItemsSource="{Binding fieldItems1}"
                                DisplayMemberPath="FieldName"
                                SelectedValuePath="FieldName"
                                
                                Margin="2">
        </ComboBox>

            <TextBlock Text="Third Order" Grid.Row="0" Grid.Column="2"/>

            <ComboBox Grid.Row="1" Grid.Column="2" MinWidth="80" Width="Auto"
                                IsEditable="True"
                                IsReadOnly="True"
                                ItemsSource="{Binding fieldItems1}"
                                DisplayMemberPath="FieldName"
                                SelectedValuePath="FieldName"
                                
                                Margin="2">
        </ComboBox>
        </Grid>
    </RibbonGroup>
    -->
    
    <RibbonGroup x:Name="TimeScope" Header="Time Filtering" >
        <StackPanel>
            <Grid DockPanel.Dock ="Top">
                <Grid.ColumnDefinitions >
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <GroupBox x:Name="GstdTime" Header="Stadard" Grid.Row="0" Grid.Column="0" Margin="5,1,5,1">
                    <StackPanel>
                        <Grid>
                            <Grid.ColumnDefinitions >
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <RibbonRadioButton GroupName="stdTime" Label="Today" Grid.Row="0" Grid.Column="0" Margin="5,1,5,1"
                                    Command="{Binding RunQueryTimeCondCmd}"
                                    IsChecked="{Binding Today.IsChecked, Mode=TwoWay}">
                                
                                <!--
                                <RadioButton.Resources>
                                    <sys:String x:Key="fixedTimeType">Day</sys:String>
                                    <sys:String x:Key="fixedValue">1</sys:String>
                                </RadioButton.Resources>
                                <RadioButton.CommandParameter>
                                    <MultiBinding Converter="{StaticResource MultiValueConverter}">
                                        <Binding Source="{StaticResource fixedTimeType}"/>
                                        <Binding Source="{StaticResource fixedValue}"/>
                                    </MultiBinding>
                                </RadioButton.CommandParameter>
                                -->
                                
                            </RibbonRadioButton>

                            <RibbonRadioButton GroupName="stdTime" Label="Last 2 Days" Grid.Row="1" Grid.Column="0" Margin="5,1,5,1"
                                         Command="{Binding RunQueryTimeCondCmd}"
                                         IsChecked="{Binding Last2Days.IsChecked, Mode=TwoWay}">
                                
                            </RibbonRadioButton>

                            <RibbonRadioButton GroupName="stdTime" Label="This Week" Grid.Row="0" Grid.Column="1" Margin="5,1,5,1"
                                        Command="{Binding RunQueryTimeCondCmd}"
                                         IsChecked="{Binding ThisWeek.IsChecked, Mode=TwoWay}">
                                
                            </RibbonRadioButton>

                            <RibbonRadioButton GroupName="stdTime" Label="Last 2 Weeks" Grid.Row="1" Grid.Column="1" Margin="5,1,5,1"
                                Command="{Binding RunQueryTimeCondCmd}"
                                         IsChecked="{Binding Last2Weeks.IsChecked, Mode=TwoWay}">
                                
                            </RibbonRadioButton>

                            <RibbonRadioButton GroupName="stdTime" Label="This Month" Grid.Row="0" Grid.Column="2" Margin="5,1,5,1"
                                Command="{Binding RunQueryTimeCondCmd}"
                                         IsChecked="{Binding ThisMonth.IsChecked, Mode=TwoWay}">
                                
                            </RibbonRadioButton>

                            <RibbonRadioButton GroupName="stdTime" Label="All" Grid.Row="1" Grid.Column="2" Margin="5,1,5,1"
                                Command="{Binding RunQueryTimeCondCmd}"
                                         IsChecked="{Binding EveryDays.IsChecke, Mode=TwoWay}">
                                
                            </RibbonRadioButton>
                        </Grid>

                    </StackPanel>
                </GroupBox>


                <GroupBox x:Name="GCustTime" Header="User Select" Grid.Row="0" Grid.Column="1" Margin="5,1,5,1">
                    <StackPanel>
                        <Grid>
                            <Grid.ColumnDefinitions >
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <RibbonRadioButton GroupName="stdTime" x:Name="userSelected" Label="กำหนดเอง" Grid.Row="1" Grid.Column="0" Margin="5" 
                                         VerticalAlignment="Center"
                                         Command="{Binding RunQueryTimeCondCmd}"
                                         IsChecked="{Binding UserSel.IsChecked, Mode=TwoWay}">

                            </RibbonRadioButton>
                            <TextBlock Text="วันเริ่มต้น:" Grid.Row="0" Grid.Column="1" Margin="5,1,5,1"/>
                            <DatePicker x:Name="DateStart" MinWidth="32" Grid.Row="1" Grid.Column="1" Margin="5,1,5,1"
                                        IsEnabled="{Binding UserSel.IsChecked}"
                                        Text="{Binding ExclusiveStart, Mode=TwoWay}">

                            </DatePicker>

                            <TextBlock Text="วันสิ้นสุด:" Grid.Row="0" Grid.Column="2" Margin="5,1,5,1"/>

                            <DatePicker x:Name="DateEnd" MinWidth="32" Grid.Row="1" Grid.Column="2" Margin="5,1,5,1"
                                        IsEnabled="{Binding UserSel.IsChecked}"
                                        Text="{Binding ExclusiveEnd, Mode=TwoWay}">

                            </DatePicker>
                        </Grid>
                    </StackPanel>

                </GroupBox>
            </Grid>
        </StackPanel>

    </RibbonGroup>
    <!--  cmd group-->

    <RibbonGroup x:Name="QueryCommand" Header="Command">
        <RibbonButton LargeImageSource="{StaticResource SearchImage}" Label="Apply" KeyTip="S" 
                                  Command="{Binding RunUserQueryCmd}" />
    </RibbonGroup>

</RibbonTab>
